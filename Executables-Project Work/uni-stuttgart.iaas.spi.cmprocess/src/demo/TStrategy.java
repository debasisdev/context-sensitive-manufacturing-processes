//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.15 at 03:46:13 AM CET 
//


package demo;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tStrategy complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tStrategy">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="AbstractIntetions" type="{http://www.uni-stuttgart.de/iaas/ipsm/v0.2/}tAbstractIntentions" minOccurs="0"/>
 *         &lt;element name="Definition" type="{http://www.uni-stuttgart.de/iaas/ipsm/v0.2/}tDefinition" maxOccurs="unbounded"/>
 *         &lt;element name="ConcreteIntentions" type="{http://www.uni-stuttgart.de/iaas/ipsm/v0.2/}tConcreteIntentions" minOccurs="0"/>
 *         &lt;element name="InitialContexts" type="{http://www.uni-stuttgart.de/iaas/ipsm/v0.2/}tContexts" minOccurs="0"/>
 *         &lt;element name="DesiredFinalContexts" type="{http://www.uni-stuttgart.de/iaas/ipsm/v0.2/}tContexts" minOccurs="0"/>
 *         &lt;element name="AlternativeFinalContexts" type="{http://www.uni-stuttgart.de/iaas/ipsm/v0.2/}tContexts" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tStrategy", namespace = "http://www.uni-stuttgart.de/iaas/ipsm/v0.2/", propOrder = {
    "abstractIntetions",
    "definition",
    "concreteIntentions",
    "initialContexts",
    "desiredFinalContexts",
    "alternativeFinalContexts"
})
public class TStrategy {

    @XmlElement(name = "AbstractIntetions")
    protected TAbstractIntentions abstractIntetions;
    @XmlElement(name = "Definition", required = true)
    protected List<TDefinition> definition;
    @XmlElement(name = "ConcreteIntentions")
    protected TConcreteIntentions concreteIntentions;
    @XmlElement(name = "InitialContexts")
    protected TContexts initialContexts;
    @XmlElement(name = "DesiredFinalContexts")
    protected TContexts desiredFinalContexts;
    @XmlElement(name = "AlternativeFinalContexts")
    protected TContexts alternativeFinalContexts;

    /**
     * Gets the value of the abstractIntetions property.
     * 
     * @return
     *     possible object is
     *     {@link TAbstractIntentions }
     *     
     */
    public TAbstractIntentions getAbstractIntetions() {
        return abstractIntetions;
    }

    /**
     * Sets the value of the abstractIntetions property.
     * 
     * @param value
     *     allowed object is
     *     {@link TAbstractIntentions }
     *     
     */
    public void setAbstractIntetions(TAbstractIntentions value) {
        this.abstractIntetions = value;
    }

    /**
     * Gets the value of the definition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the definition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDefinition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TDefinition }
     * 
     * 
     */
    public List<TDefinition> getDefinition() {
        if (definition == null) {
            definition = new ArrayList<TDefinition>();
        }
        return this.definition;
    }

    /**
     * Gets the value of the concreteIntentions property.
     * 
     * @return
     *     possible object is
     *     {@link TConcreteIntentions }
     *     
     */
    public TConcreteIntentions getConcreteIntentions() {
        return concreteIntentions;
    }

    /**
     * Sets the value of the concreteIntentions property.
     * 
     * @param value
     *     allowed object is
     *     {@link TConcreteIntentions }
     *     
     */
    public void setConcreteIntentions(TConcreteIntentions value) {
        this.concreteIntentions = value;
    }

    /**
     * Gets the value of the initialContexts property.
     * 
     * @return
     *     possible object is
     *     {@link TContexts }
     *     
     */
    public TContexts getInitialContexts() {
        return initialContexts;
    }

    /**
     * Sets the value of the initialContexts property.
     * 
     * @param value
     *     allowed object is
     *     {@link TContexts }
     *     
     */
    public void setInitialContexts(TContexts value) {
        this.initialContexts = value;
    }

    /**
     * Gets the value of the desiredFinalContexts property.
     * 
     * @return
     *     possible object is
     *     {@link TContexts }
     *     
     */
    public TContexts getDesiredFinalContexts() {
        return desiredFinalContexts;
    }

    /**
     * Sets the value of the desiredFinalContexts property.
     * 
     * @param value
     *     allowed object is
     *     {@link TContexts }
     *     
     */
    public void setDesiredFinalContexts(TContexts value) {
        this.desiredFinalContexts = value;
    }

    /**
     * Gets the value of the alternativeFinalContexts property.
     * 
     * @return
     *     possible object is
     *     {@link TContexts }
     *     
     */
    public TContexts getAlternativeFinalContexts() {
        return alternativeFinalContexts;
    }

    /**
     * Sets the value of the alternativeFinalContexts property.
     * 
     * @param value
     *     allowed object is
     *     {@link TContexts }
     *     
     */
    public void setAlternativeFinalContexts(TContexts value) {
        this.alternativeFinalContexts = value;
    }

}
