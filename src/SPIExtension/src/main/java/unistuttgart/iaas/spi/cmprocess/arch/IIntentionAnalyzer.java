package unistuttgart.iaas.spi.cmprocess.arch;

import java.util.Set;

import de.uni_stuttgart.iaas.ipsm.v0.TIntention;
import de.uni_stuttgart.iaas.ipsm.v0.TProcessDefinitions;

/**
 * A Generic Interface for Intention Analyzer Module.
 * @author Debasis Kar
 */
public interface IIntentionAnalyzer {
	/**
	 * Any Custom Intention Analyzer has to implement the following method that will take
	 * TProcessDefinitions (a set of process definitions/alternatives) and TIntention (attached goals)
	 * as its input parameter. The implementation must look for the the goals and sub-goals of each 
	 * process and validate it. The final result is stored as a Set containing the Process IDs of
	 * the process realization definitions.
	 * @author Debasis Kar
	 * @param TProcessDefinitions, TIntention
	 * @return Set<String> 
	 */
	public Set<String> analyzeIntention(TProcessDefinitions processSet, TIntention mainIntention);
	
	/**
	 * Any Custom Intention Analyzer has to implement the following method that will take
	 * the Set of process IDs generated by analyzeIntention() method as its input parameter. 
	 * The implementation must perform a set intersection operation with the Set of Process IDs
	 * received from the Context Analyzer. The final process id set is returned and forwarded to
	 * Process Optimizer module for further analysis.
	 * @author Debasis Kar
	 * @param Set<String>
	 * @return Set<String> 
	 */
	public Set<String> getProcessListOfIntentionAnalyzer(Set<String> processesFromContextAnalyzer);
}
