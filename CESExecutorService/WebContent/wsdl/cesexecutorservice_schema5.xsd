<?xml version="1.0" encoding="utf-8"?><xs:schema xmlns:tns="http://docs.oasis-open.org/tosca/ns/2011/12" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/tosca/ns/2011/12" version="1.0">
<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="cesexecutorservice_schema1.xsd"/>
<xs:element name="Definitions">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:tDefinitions">
          <xs:sequence/>
          <xs:anyAttribute namespace="##other" processContents="skip"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
<xs:element name="documentation" type="tns:tDocumentation"/>
<xs:complexType name="tDefinitions">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Extensions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Extension" type="tns:tExtension"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Import" type="tns:tImport"/>
          <xs:element minOccurs="0" name="Types">
            <xs:complexType>
              <xs:sequence>
                <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element name="ServiceTemplate" type="tns:tServiceTemplate"/>
            <xs:element name="NodeType" type="tns:tNodeType"/>
            <xs:element name="NodeTypeImplementation" type="tns:tNodeTypeImplementation"/>
            <xs:element name="RelationshipType" type="tns:tRelationshipType"/>
            <xs:element name="RelationshipTypeImplementation" type="tns:tRelationshipTypeImplementation"/>
            <xs:element name="RequirementType" type="tns:tRequirementType"/>
            <xs:element name="CapabilityType" type="tns:tCapabilityType"/>
            <xs:element name="ArtifactType" type="tns:tArtifactType"/>
            <xs:element name="ArtifactTemplate" type="tns:tArtifactTemplate"/>
            <xs:element name="PolicyType" type="tns:tPolicyType"/>
            <xs:element name="PolicyTemplate" type="tns:tPolicyTemplate"/>
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="targetNamespace" type="xs:anyURI" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tExtensibleElements">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentation" nillable="true" type="tns:tDocumentation"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="skip"/>
  </xs:complexType>
<xs:complexType name="tExtension">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence/>
        <xs:attribute name="namespace" type="xs:anyURI" use="required"/>
        <xs:attribute name="mustUnderstand" type="tns:tBoolean"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType mixed="true" name="tDocumentation">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="source" type="xs:anyURI"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
<xs:complexType name="tPropertyMapping">
    <xs:sequence/>
    <xs:attribute name="serviceTemplatePropertyRef" type="xs:string" use="required"/>
    <xs:attribute name="targetObjectRef" type="xs:IDREF" use="required"/>
    <xs:attribute name="targetPropertyRef" type="xs:string" use="required"/>
  </xs:complexType>
<xs:complexType name="tImplementationArtifact">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence/>
        <xs:attribute name="interfaceName" type="xs:anyURI"/>
        <xs:attribute name="operationName" type="xs:NCName"/>
        <xs:attribute name="artifactType" type="xs:QName" use="required"/>
        <xs:attribute name="artifactRef" type="xs:QName"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tRequirement">
    <xs:complexContent>
      <xs:extension base="tns:tEntityTemplate">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType abstract="true" name="tEntityTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Properties">
            <xs:complexType>
              <xs:sequence>
                <xs:any namespace="##other" processContents="lax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="PropertyConstraints">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="PropertyConstraint" type="tns:tPropertyConstraint"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="type" type="xs:QName" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tPropertyConstraint">
    <xs:complexContent>
      <xs:extension base="tns:tConstraint">
        <xs:sequence/>
        <xs:attribute name="property" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tConstraint">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="constraintType" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="tArtifactTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tEntityTemplate">
        <xs:sequence>
          <xs:element minOccurs="0" name="ArtifactReferences">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="ArtifactReference" type="tns:tArtifactReference"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tArtifactReference">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="Include">
          <xs:complexType>
            <xs:sequence/>
            <xs:attribute name="pattern" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="Exclude">
          <xs:complexType>
            <xs:sequence/>
            <xs:attribute name="pattern" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="reference" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="tPolicyTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tEntityTemplate">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tNodeTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tEntityTemplate">
        <xs:sequence>
          <xs:element minOccurs="0" name="Requirements">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Requirement" type="tns:tRequirement"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="Capabilities">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Capability" type="tns:tCapability"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="Policies">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Policy" type="tns:tPolicy"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="DeploymentArtifacts" type="tns:tDeploymentArtifacts"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="minInstances" type="xs:int"/>
        <xs:attribute name="maxInstances" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tCapability">
    <xs:complexContent>
      <xs:extension base="tns:tEntityTemplate">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tPolicy">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="policyType" type="xs:QName" use="required"/>
        <xs:attribute name="policyRef" type="xs:QName"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tDeploymentArtifacts">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="DeploymentArtifact" type="tns:tDeploymentArtifact"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tDeploymentArtifact">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="artifactType" type="xs:QName" use="required"/>
        <xs:attribute name="artifactRef" type="xs:QName"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tRelationshipTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tEntityTemplate">
        <xs:sequence>
          <xs:element name="SourceElement">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="ref" type="xs:IDREF" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element name="TargetElement">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="ref" type="xs:IDREF" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="RelationshipConstraints">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="RelationshipConstraint">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:any namespace="##other" processContents="lax"/>
                    </xs:sequence>
                    <xs:attribute name="constraintType" type="xs:anyURI" use="required"/>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tParameter">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="required"/>
    <xs:attribute name="required" type="tns:tBoolean"/>
  </xs:complexType>
<xs:complexType name="tRequiredContainerFeature">
    <xs:sequence/>
    <xs:attribute name="feature" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="tInterface">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Operation" type="tns:tOperation"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="tOperation">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="InputParameters">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="InputParameter" type="tns:tParameter"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="OutputParameters">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="OutputParameter" type="tns:tParameter"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:NCName" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tRelationshipTypeImplementation">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Tags" type="tns:tTags"/>
          <xs:element minOccurs="0" name="DerivedFrom">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="relationshipTypeImplementationRef" type="xs:QName" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="RequiredContainerFeatures" type="tns:tRequiredContainerFeatures"/>
          <xs:element minOccurs="0" name="ImplementationArtifacts" type="tns:tImplementationArtifacts"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:NCName" use="required"/>
        <xs:attribute name="targetNamespace" type="xs:anyURI"/>
        <xs:attribute name="relationshipType" type="xs:QName" use="required"/>
        <xs:attribute name="abstract" type="tns:tBoolean"/>
        <xs:attribute name="final" type="tns:tBoolean"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tTags">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Tag" type="tns:tTag"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tTag">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>
<xs:complexType name="tRequiredContainerFeatures">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="RequiredContainerFeature" type="tns:tRequiredContainerFeature"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tImplementationArtifacts">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="ImplementationArtifact">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:tImplementationArtifact">
              <xs:sequence/>
              <xs:anyAttribute namespace="##other" processContents="skip"/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tExportedInterface">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Operation" type="tns:tExportedOperation"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="tExportedOperation">
    <xs:sequence>
      <xs:element minOccurs="0" name="NodeOperation">
        <xs:complexType>
          <xs:sequence/>
          <xs:attribute name="nodeRef" type="xs:IDREF" use="required"/>
          <xs:attribute name="interfaceName" type="xs:anyURI" use="required"/>
          <xs:attribute name="operationName" type="xs:NCName" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="RelationshipOperation">
        <xs:complexType>
          <xs:sequence/>
          <xs:attribute name="relationshipRef" type="xs:IDREF" use="required"/>
          <xs:attribute name="interfaceName" type="xs:anyURI" use="required"/>
          <xs:attribute name="operationName" type="xs:NCName" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="Plan">
        <xs:complexType>
          <xs:sequence/>
          <xs:attribute name="planRef" type="xs:IDREF" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:NCName" use="required"/>
  </xs:complexType>
<xs:complexType name="tRequirementRef">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="ref" type="xs:IDREF" use="required"/>
  </xs:complexType>
<xs:complexType name="tTopologyElementInstanceStates">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InstanceState">
        <xs:complexType>
          <xs:sequence/>
          <xs:attribute name="state" type="xs:anyURI" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tCapabilityDefinition">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Constraints">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Constraint" type="tns:tConstraint"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="capabilityType" type="xs:QName" use="required"/>
        <xs:attribute name="lowerBound" type="xs:int"/>
        <xs:attribute name="upperBound" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tRequirementDefinition">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Constraints">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Constraint" type="tns:tConstraint"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="requirementType" type="xs:QName" use="required"/>
        <xs:attribute name="lowerBound" type="xs:int"/>
        <xs:attribute name="upperBound" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tCapabilityRef">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="ref" type="xs:IDREF" use="required"/>
  </xs:complexType>
<xs:complexType name="tImport">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence/>
        <xs:attribute name="namespace" type="xs:anyURI"/>
        <xs:attribute name="location" type="xs:anyURI"/>
        <xs:attribute name="importType" type="xs:string" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tPlans">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Plan" type="tns:tPlan"/>
    </xs:sequence>
    <xs:attribute name="targetNamespace" type="xs:anyURI"/>
  </xs:complexType>
<xs:complexType name="tPlan">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Precondition" type="tns:tCondition"/>
          <xs:element minOccurs="0" name="InputParameters">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="InputParameter" type="tns:tParameter"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="OutputParameters">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="OutputParameter" type="tns:tParameter"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="PlanModel">
            <xs:complexType>
              <xs:sequence>
                <xs:any namespace="##other" processContents="lax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="PlanModelReference">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="reference" type="xs:anyURI" use="required"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="planType" type="xs:anyURI" use="required"/>
        <xs:attribute name="planLanguage" type="xs:anyURI" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tCondition">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="expressionLanguage" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="tCapabilityType">
    <xs:complexContent>
      <xs:extension base="tns:tEntityType">
        <xs:sequence/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType abstract="true" name="tEntityType">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Tags" type="tns:tTags"/>
          <xs:element minOccurs="0" name="DerivedFrom">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="typeRef" type="xs:QName" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="PropertiesDefinition">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="element" type="xs:QName"/>
              <xs:attribute name="type" type="xs:QName"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:NCName" use="required"/>
        <xs:attribute name="abstract" type="tns:tBoolean"/>
        <xs:attribute name="final" type="tns:tBoolean"/>
        <xs:attribute name="targetNamespace" type="xs:anyURI"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tNodeType">
    <xs:complexContent>
      <xs:extension base="tns:tEntityType">
        <xs:sequence>
          <xs:element minOccurs="0" name="RequirementDefinitions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="RequirementDefinition" type="tns:tRequirementDefinition"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="CapabilityDefinitions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="CapabilityDefinition" type="tns:tCapabilityDefinition"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="InstanceStates" type="tns:tTopologyElementInstanceStates"/>
          <xs:element minOccurs="0" name="Interfaces">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Interface" type="tns:tInterface"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tRelationshipType">
    <xs:complexContent>
      <xs:extension base="tns:tEntityType">
        <xs:sequence>
          <xs:element minOccurs="0" name="InstanceStates" type="tns:tTopologyElementInstanceStates"/>
          <xs:element minOccurs="0" name="SourceInterfaces">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Interface" type="tns:tInterface"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="TargetInterfaces">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="Interface" type="tns:tInterface"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="ValidSource">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="typeRef" type="xs:QName" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="ValidTarget">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="typeRef" type="xs:QName" use="required"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tRequirementType">
    <xs:complexContent>
      <xs:extension base="tns:tEntityType">
        <xs:sequence/>
        <xs:attribute name="requiredCapabilityType" type="xs:QName"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tArtifactType">
    <xs:complexContent>
      <xs:extension base="tns:tEntityType">
        <xs:sequence/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tPolicyType">
    <xs:complexContent>
      <xs:extension base="tns:tEntityType">
        <xs:sequence>
          <xs:element minOccurs="0" name="AppliesTo" type="tns:tAppliesTo"/>
        </xs:sequence>
        <xs:attribute name="policyLanguage" type="xs:anyURI"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tAppliesTo">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="NodeTypeReference">
        <xs:complexType>
          <xs:sequence/>
          <xs:attribute name="typeRef" type="xs:QName" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tBoundaryDefinitions">
    <xs:sequence>
      <xs:element minOccurs="0" name="Properties">
        <xs:complexType>
          <xs:sequence>
            <xs:any namespace="##other" processContents="lax"/>
            <xs:element minOccurs="0" name="PropertyMappings">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" name="PropertyMapping" type="tns:tPropertyMapping"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="PropertyConstraints">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="PropertyConstraint" type="tns:tPropertyConstraint"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="Requirements">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Requirement" type="tns:tRequirementRef"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="Capabilities">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Capability" type="tns:tCapabilityRef"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="Policies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Policy" type="tns:tPolicy"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="Interfaces">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Interface" type="tns:tExportedInterface"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="tNodeTypeImplementation">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Tags" type="tns:tTags"/>
          <xs:element minOccurs="0" name="DerivedFrom">
            <xs:complexType>
              <xs:sequence/>
              <xs:attribute name="nodeTypeImplementationRef" type="xs:QName" use="required"/>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="RequiredContainerFeatures" type="tns:tRequiredContainerFeatures"/>
          <xs:element minOccurs="0" name="ImplementationArtifacts" type="tns:tImplementationArtifacts"/>
          <xs:element minOccurs="0" name="DeploymentArtifacts" type="tns:tDeploymentArtifacts"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:NCName" use="required"/>
        <xs:attribute name="targetNamespace" type="xs:anyURI"/>
        <xs:attribute name="nodeType" type="xs:QName" use="required"/>
        <xs:attribute name="abstract" type="tns:tBoolean"/>
        <xs:attribute name="final" type="tns:tBoolean"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tExtensions">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="Extension" type="tns:tExtension"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tTopologyTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element name="NodeTemplate" type="tns:tNodeTemplate"/>
            <xs:element name="RelationshipTemplate" type="tns:tRelationshipTemplate"/>
          </xs:choice>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:complexType name="tServiceTemplate">
    <xs:complexContent>
      <xs:extension base="tns:tExtensibleElements">
        <xs:sequence>
          <xs:element minOccurs="0" name="Tags" type="tns:tTags"/>
          <xs:element minOccurs="0" name="BoundaryDefinitions" type="tns:tBoundaryDefinitions"/>
          <xs:element name="TopologyTemplate" type="tns:tTopologyTemplate"/>
          <xs:element minOccurs="0" name="Plans" type="tns:tPlans"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="targetNamespace" type="xs:anyURI"/>
        <xs:attribute name="substitutableNodeType" type="xs:QName"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
<xs:simpleType name="tBoolean">
    <xs:restriction base="xs:string">
      <xs:enumeration value="yes"/>
      <xs:enumeration value="no"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
